package com.example.myapplication2.Login;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import com.example.myapplication2.HttpURLConnection_AsyncTask;
import com.example.myapplication2.R;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.Map;

public class LoginActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        final TextView registerLink = findViewById(R.id.register);

        registerLink.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent registerIntent = new Intent(LoginActivity.this,RegisterActivity.class);
                LoginActivity.this.startActivity(registerIntent);
            }
        });
    }
    public void login(View v){
        final EditText edUserid = findViewById(R.id.username);
        final EditText edPasswd = findViewById(R.id.password);
        String uid = edUserid.getText().toString();
        String pwd = edPasswd.getText().toString();
        ///*
        Map<String,String> map = new HashMap<>();
        map.put("command", "userLogin");
        map.put("uid", uid);
        map.put("pwd", pwd);
        new login(this).execute((HashMap)map);
        //*/
    }
    private static class login extends HttpURLConnection_AsyncTask{

        // 建立弱連結
        WeakReference<Activity> activityReference;
        login(Activity context){
            activityReference = new WeakReference<>(context);
        }
        @Override
        protected void onPostExecute(String result) {
            JSONObject jsonObject = null;
            boolean status = false;
            // 取得弱連結的Context
            Activity activity = activityReference.get();
            if (activity == null || activity.isFinishing()) return;

            try {
                jsonObject = new JSONObject(result);
                status = jsonObject.getBoolean("status");
            } catch (JSONException e) {
                e.printStackTrace();
            }
            if (status){
                Toast.makeText(activity, "登入成功", Toast.LENGTH_LONG).show();
                // 對Context進行操作
                activity.finish();
                if (!activity.isDestroyed()){
                    Log.d("LOG TEST", "Activity未關閉");
                }
            }else {
                new AlertDialog.Builder(activity)
                        .setTitle("輸入錯誤")
                        .setMessage("登入失敗")
                        .setPositiveButton("OK", null)
                        .show();
            }
            /*
            new AlertDialog.Builder(activity)
                    .setTitle("未知的錯誤")
                    .setMessage(result)
                    .setPositiveButton("OK", null)
                    .show();
            */

        }
    }
}

